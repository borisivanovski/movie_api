.exit
.save server.js
console.log('My test server is runnung on port 8080.');
}).listen(8080);
});
response.end();
response.write(data);
response.writeHead(200, { 'Content-Type': 'text/html' });
}
throw err;
if (err) {
fs.readFile(filePath, (err, data) => {
}
filePath = 'index.html';
} else {
filePath = (__dirname + '/documentation.html');
if (q.pathname.includes('documentations')) {
});
}
console.log('Added to log.');
} else {
console.log(err);
if (err) {
fs.appendFile('log.txt', 'URL: ' + addr + '\nTimestamp: ' + new Date() + '\n\n', (err) => {
filePath = '';
q = url.parse(addr, true),
let addr = request.url,
http.createServer((request, response) => {
url = require('url');
fs = require('fs'),
const http = require('http'),
.load server.js
.exit
.load server.js
                                                                                      console.log('My test server is running on Port 8080.');
                                                                                      }).listen(8080);
                                                                                      });
                                                                                    response.end();
                                                                                response.write(data);
                                                                            response.writeHead(200, { 'Content-Type': 'text/html' });
                                                                        }
                                                                    throw err;
                                                              if (err) {
                                                          fs.readFile(filePath, (err, data) => {
                                                        }
                                                      filePath = 'index.html';
                                                  } else {
                                                filePath = (__dirname + '/documentation.html');
                                            if (q.pathname.includes('documentation')) {
                                          });
                                        }
                                    console.log('Added to log.');
                              } else {
                          console.log(err);
                    if (err) {
                fs.appendFile('log.txt', 'URL: ' + addr + '\nTimestamp: ' + new Date() + '\n\n', (err) => {
              filePath = '';
          q = url.parse(addr, true),
      let addr = request.url,
    http.createServer((request, response) => {
    url = require('url');
  fs = require('fs'),
const http = require('http'),
.load server.js
update()
console.log('My first Node test server is running on port 8080.');
}).listen(8080);
response.end('Hello Node!\n');
response.writeHead(200, {'Content-Type': 'text/plain'});
http.createServer((request, response) => {
let http = require('http');
.load server.js
.exit
                                      </htm>
                                      </body> 
                                   <p>This is the index.html file</p>
                               <h1>Index Page</h1>
                           <body>
                        </head>
                    <title>INDEX</title>
            <meta charset="uft-8">
    <head>
<htm lang="en" dir="ltr">
<!DOCTYPE html>
.load index.html
.exit
.save server.js
console.log('My first Node test server is running on port 8080.');
}).listen(8080);
response.end('Hello Node!\n');
response.writeHead(200, {'Content-Type': 'text/plain'});
http.createServer((request, response) => {
let http = require('http');
.load server.js
}) .listen(8080);
response.end('Hello Node\n');
response.writeHead(200, {'Content-Type': 'text/plain'});
http.createServer(function(request, response) {
let http = requier("http");
.load server.js
.save server.js
console.log('My first Node test server is running on Port 8080.')
}) .listen(8080);
response.end('Hello Node!\n');
response.writeHead(200, {'Content-Type': 'text/plain'});
http.createServer(function(request, response) {
.load server.js
}) .listen(8080);
response.end('Hello Node!\n');
console.log('My first Node test server is running on Port 8080.');
response.end('Hello Node!\n');
response.writeHead(200, {'Content-Type': 'text/plain'});
http.createServer((request, response) => {
const http = require('http');
.load server.js
help
.exit
.save server.js
console.log('My first Node test server is running on Port 8080.');
response.end('Hello Node!\n');
response.writeHead(200, {'Content-Type': 'text/plain'});
http.createServer((request, response) => {
const http = require('http');
.load server.js
console.log('My first Node test server is running on Port 8080');
})listen(8080);
response.end('Hello Node!\n');
response.writeHead(200, {'Content-Type': 'text/plain'});
http.createServer((request, response) => {
const http = require('http');
.exit
.save test.js
console.log("Goodbye.");
console.log("Hello Node!")
.load test.js
console.log ("Goodbye")
console.log("Hello, Node!")
.load test.js
.exit
.save test.js
console.log ("Goodbye")
console.log("Hello, Node!")
.load test.js
.exit
pwd
dir
console.log('Hello,Node!')
C:\Users\User\cd Documents
C:\Users\User\Documents\careerfoundry> cd..
pwd
 100 + 200